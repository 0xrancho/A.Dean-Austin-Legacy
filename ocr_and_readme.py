#!/usr/bin/env python3
"""
OCR script to extract text from images and create README files
Uses PIL for image processing and basic OCR capabilities
"""
import os
import sys
from PIL import Image
from datetime import datetime
import json

def simple_ocr_metadata(image_paths):
    """
    Extract basic metadata from images.
    Note: This is a placeholder for OCR. For full OCR, tesseract would be needed.
    """
    metadata = []

    for img_path in sorted(image_paths):
        img = Image.open(img_path)

        # Get basic image info
        width, height = img.size
        orientation = "Portrait" if height > width else "Landscape"

        # Try to get creation date from EXIF
        exif = img.getexif()
        date_taken = "Unknown"
        if exif:
            # EXIF tag 36867 is DateTimeOriginal
            date_taken = exif.get(36867, "Unknown")

        metadata.append({
            'filename': os.path.basename(img_path),
            'dimensions': f"{width}x{height}",
            'orientation': orientation,
            'date_taken': date_taken,
            'size_mb': round(os.path.getsize(img_path) / (1024*1024), 2)
        })

    return metadata

def create_readme(folder_path, folder_name, metadata, description=""):
    """Create a README.md file with metadata and description"""

    readme_content = f"""# {folder_name}

## Overview
{description if description else "Document archive from the Arthur Dean collection."}

## Document Information
- **Total Pages/Images**: {len(metadata)}
- **Folder**: {folder_name}
- **Date Archived**: {datetime.now().strftime("%Y-%m-%d")}

## Files in this Collection

"""

    # Add file details
    for idx, meta in enumerate(metadata, 1):
        readme_content += f"""### Page {idx}: {meta['filename']}
- **Dimensions**: {meta['dimensions']}
- **Orientation**: {meta['orientation']}
- **Date Taken**: {meta['date_taken']}
- **File Size**: {meta['size_mb']} MB

"""

    # Check if PDF exists
    pdf_files = [f for f in os.listdir(folder_path) if f.endswith('.pdf')]
    if pdf_files:
        readme_content += f"""## Compiled Document
This collection has been compiled into a PDF: **{pdf_files[0]}**

"""

    readme_content += """## Notes
For text extraction and full OCR capabilities, tesseract-ocr would need to be installed.
This README provides structural metadata about the documents in this collection.

---
*Generated by Arthur Dean Archive Processing System*
"""

    readme_path = os.path.join(folder_path, "README.md")
    with open(readme_path, 'w') as f:
        f.write(readme_content)

    print(f"Created README at: {readme_path}")
    return readme_path

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: ocr_and_readme.py <folder_path> [description]")
        sys.exit(1)

    folder_path = sys.argv[1]
    description = sys.argv[2] if len(sys.argv) > 2 else ""

    # Get all jpg files in folder
    image_files = sorted([
        os.path.join(folder_path, f)
        for f in os.listdir(folder_path)
        if f.lower().endswith(('.jpg', '.jpeg'))
    ])

    if not image_files:
        print("No image files found in folder")
        sys.exit(1)

    # Extract metadata
    print(f"Processing {len(image_files)} images...")
    metadata = simple_ocr_metadata(image_files)

    # Create README
    folder_name = os.path.basename(folder_path)
    readme_path = create_readme(folder_path, folder_name, metadata, description)

    print(f"Successfully created README for {folder_name}")
